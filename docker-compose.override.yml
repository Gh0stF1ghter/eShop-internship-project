version: '3.4'

services:
  catalogs.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
    - mssql.db
    networks:
    - elastic

  identity.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on: 
      - rabbitmq
      - mssql.db
    networks:
      - elastic

  baskets.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on: 
      - rabbitmq
      - mongo
    networks:
      - elastic

# MongoDb
  mongo:
    image: mongo
    ports:
      - 27017:27017
    restart: always
    networks:
      - elastic

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
    depends_on:
      - mongo
    networks:
      - elastic

  rabbitmq:
    container_name: "rabbitmqcontainer"
    image: rabbitmq:management
    hostname: "rabbitmq"
    ports:
        - '5672:5672'
        - '15672:15672'
    restart: always
    networks:
      - elastic

  mssql.db: 
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: mssql.db
    ports:
        - "1433:1433"
    environment:
        - ACCEPT_EULA=y
        - MSSQL_SA_PASSWORD=A&VeryComplex123Password
    networks:
    - elastic

  redis:
    image: redis:latest
    container_name: redis
    ports:
        - "6379:6379"
    environment:
        - REDIS_PORT=6379
        - REDIS_PASSWORD=A&VeryComplex123Password
    networks:
      - elastic

# ELK stack
  elasticsearch:
   container_name: elasticsearch
   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
   ports:
    - 9200:9200
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   environment:
    - xpack.license.self_generated.type=basic
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node
   networks:
    - elastic

  kibana:
   container_name: kibana
   image: docker.elastic.co/kibana/kibana:7.9.1
   ports:
    - 5601:5601
   depends_on:
    - elasticsearch
   environment:
    - ELASTICSEARCH_URL=http://elasticsearch:9200
   networks:
    - elastic
  
networks:
  elastic:
    driver: bridge
volumes:
  elasticsearch-data:
